package Actor

import scala.actors.OutputChannel
import scala.actors.Actor
import scala.actors.Actor._
import scala.actors.Channel

case class Compute (input:Seq[Int], result: OutputChannel[Int])

class Computer extends Actor{
  def act(){
    while(true)
      receive{
        case Compute(input, out) => { val answer = 24 ; out ! answer}
      }
  }
}


object Compute {
  def main(args: Array[String]): Unit = {
    val channel = new Channel[Int]
    val computeActor: Computer = new Computer
    val input : Seq[Int] = [12,325,323]
    computeActor ! Compute(input, channel)
    channel.receive{
      case x => println("Successful!")
    }
    }
}